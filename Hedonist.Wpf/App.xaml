<Application x:Class="Hedonist.Wpf.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Hedonist.Wpf"
             DispatcherUnhandledException="Application_DispatcherUnhandledException"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Style x:Key="roundButton" TargetType="Button">
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="62"/>
            <Setter Property="FontWeight" Value="600"/>
            <Setter Property="Background" Value="#E4E4E9"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentControl>
                            <Border x:Name="normalBorder" Width="165" Height="165"
                                    CornerRadius="150" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" Margin="20">
                                <ContentPresenter HorizontalAlignment="Center"
                                    VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                                </ContentPresenter>
                            </Border>
                        </ContentControl>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsPressed" Value="True" >
                                <Setter Property="BorderThickness" Value="2"/>
                                <Setter Property="BorderBrush" Value="#0BDAF2" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="commonDarkButton" TargetType="Button">
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#2A2C2C"/>
            <Setter Property="BorderThickness" Value="0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentControl>
                            <Border Height="100" CornerRadius="50" BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                Margin="{TemplateBinding Padding}">
                                </ContentPresenter>
                            </Border>
                        </ContentControl>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsPressed" Value="True" >
                                <Setter Property="BorderThickness" Value="2"/>
                                <Setter Property="BorderBrush" Value="#0BDAF2" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Image x:Key="variantsArtButton" Source="\\Images\art.png" />
        
        <Style x:Key="variantsButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentControl>
                            <Image Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Width="1080" Margin="0" />
                        </ContentControl>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsPressed" Value="True" >
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="8"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="answersRadio" TargetType="RadioButton">
           
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent" Cursor="Hand" Margin="0 22 0 0">
                            <BulletDecorator.Bullet>
                                <Grid Height="32" Width="32">
                                    <!--Define size of the Bullet-->
                                    <!--The two borders-->
                                    <Border Name="RadioOuter" CornerRadius="100" Background="Black" BorderBrush="#0BDAF2" BorderThickness="2" />
                                    <Border Name="RadioMark" CornerRadius="100" Margin="3" BorderBrush="Black" BorderThickness="2" Background="#0BDAF2" Visibility="Hidden" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <!--Text element-->
                            <TextBlock Margin="23,0,0,0" Foreground="White" FontFamily="Montserrat" FontSize="24" FontWeight="Normal">
                                <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>
                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#0BDAF2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="FontSize" Value="42" />
            <Setter Property="FontWeight" Value="ExtraBold" />
            <Setter Property="PasswordChar" Value="*" />
            <Setter Property="MaxWidth" Value="420" />
            <Setter Property="MaxHeight" Value="100" />
            <Setter Property="Padding" Value="20 25 20 15" />
            <Setter Property="MaxLength" Value="10" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="VerticalAlignment" Value="Center" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="Border" CornerRadius="50"
                                Padding="0" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="White" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Black" />
                            </Border.BorderBrush>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="textHypno" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="141"/>
            <Setter Property="FontWeight" Value="Heavy"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0" Color="#0BDAF2" />
                        <GradientStop Offset="1" Color="#DD01E5" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="textLarge" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="64"/>
            <Setter Property="FontWeight" Value="Black"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="textMiddle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="textSmall" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="textInfoPageSmall" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="textGiftLarge" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="64"/>
            <Setter Property="FontWeight" Value="Black"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="textGiftMiddle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="50"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="textGiftSmall" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="textGiftSmaller" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        
        

    </Application.Resources>
</Application>
